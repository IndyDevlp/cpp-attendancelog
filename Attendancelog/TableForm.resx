<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>